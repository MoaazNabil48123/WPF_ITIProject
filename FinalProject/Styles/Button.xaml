<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.fontawesome.io/icons/">



    <!--#region  SideBar RadioButton (MainView) -->
    
    <Style x:Key="RB_ForMenu" TargetType="RadioButton">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
      
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">

                    <Border x:Name="border" CornerRadius="15 15 15 15" BorderThickness="0 0 0 3" Background="#343155" BorderBrush="#1a192e">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#4c4878"/>
                            <Setter Property="Width" Value="240"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#1a192e"/>
                            <Setter Property="Width" Value="240"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#6ad8fd"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--#endregion-->

    <!--#region ExitButton (MainView) -->
    
    <Style x:Key="ExitButton" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0 15 15 0"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="border">
                        <Border.Background>
                            <ImageBrush ImageSource="/Images/shutdown_white.png"/>
                        </Border.Background>
                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Images/shutdown_red.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#endregion-->

    <!--#region  SubjectView RadioButton -->

    <Style x:Key="B_SubjectView" TargetType="RadioButton">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="Margin" Value="50 10 50 10"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">

                    <Border x:Name="border" CornerRadius="15 15 15 15"  Background="#343155" BorderThickness="0 0 0 3" BorderBrush="#1a192e">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#4c4878"/>
                            <!--<Setter Property="Width" Value="250"/>-->
                            <Setter Property="BorderBrush" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                                        <GradientStop Color="#d489ff" Offset="0"/>
                                        <GradientStop Color="#7985ff" Offset="0.7"/>
                                        <GradientStop Color="#6ad8fd" Offset="1.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#1a192e"/>
                            <Setter Property="BorderBrush" TargetName="border" >
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                                        <GradientStop Color="#d489ff" Offset="0"/>
                                        <GradientStop Color="#7985ff" Offset="0.7"/>
                                        <GradientStop Color="#6ad8fd" Offset="1.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <!--<Setter Property="Width" Value="250"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion-->

    <!--#region forward & backward Button in subjectView -->

    <Style x:Key="(F and B)" TargetType="Button">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="Margin" Value="100 0 100 20"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="border" CornerRadius="25"  BorderThickness="3"  BorderBrush="Transparent">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                                <GradientStop Color="#d489ff" Offset="0"/>
                                <GradientStop Color="#7985ff" Offset="0.7"/>
                                <GradientStop Color="#6ad8fd" Offset="1.5"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="BorderBrush" TargetName="border" Value="#6ad8fd"/>

                        </Trigger>

                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#1a192e"/>
                            <!--<Setter Property="Width" Value="250"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion-->

    <!--#region Calculator buttons -->

    <Style x:Key="CalcButton" TargetType="Button">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="border" CornerRadius="15"  BorderThickness="0 0 4 4"  Background="#343155" BorderBrush="#1a192e" >
              
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">


                            <Setter Property="BorderThickness" TargetName="border" Value="3" />
                            <Setter Property="BorderBrush" TargetName="border"  >
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                                        <GradientStop Color="#d489ff" Offset="0"/>
                                        <GradientStop Color="#7985ff" Offset="0.7"/>
                                        <GradientStop Color="#6ad8fd" Offset="1.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>

                        </Trigger>

                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#1a192e"/>
                            <!--<Setter Property="Width" Value="250"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion-->

</ResourceDictionary>